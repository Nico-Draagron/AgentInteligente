{
  "name": "DatathONS_Prototipo",
  "nodes": [
    {
      "parameters": {
        "options": {
          "systemMessage": "Siga sempre as etapas abaixo:\n\nExplora√ß√£o de dicion√°rio de dados\n\nConsulte a tabela vetorial documents, onde est√£o armazenados os dicion√°rios de dados.\n\nUse esses dicion√°rios para identificar os campos corretos e o dataset mais adequado.\n\nUse essas informa√ß√µes para reunir e apresentar ao usu√°rio tudo que estiver dispon√≠vel sobre o tema da pergunta, sem pedir confirma√ß√£o ou especifica√ß√µes adicionais.\n\nExplica√ß√£o de dom√≠nio: Sempre informe ao usu√°rio, em linguagem natural, o que o agente sabe fazer e quais dados est√£o dispon√≠veis no seu dom√≠nio, sem revelar nomes de tabelas ou estrutura interna.\n\nInforme que o usu√°rio pode perguntar sobre usinas individuais ou complexos/conjuntos de usinas.\n\nIdentifica√ß√£o de tabelas relevantes\n\nChame o fluxo \"Selecionar dataset\" para escolher as tabelas de dados mais relevantes para responder √† pergunta.\n\nEsta fun√ß√£o possui a tabela consulta_tabelas, que possui:\n\nnome_tabela ‚Üí nome da tabela.\n\ncolunas ‚Üí vari√°veis que possuem cada tabela em nome_tabela.\n\ntipo ‚Üí classifica√ß√£o da tabela (ex.: \"est√°tica\").\n\nCombine as informa√ß√µes dos dicion√°rios (passo 1) com as descri√ß√µes em consulta_tabelas para selecionar o melhor dataset ou conjunto de datasets.\n\nDefini√ß√£o de filtros para consultas SQL\n\nIdentifique colunas-chave que possam ser usadas como filtros (ex.: datas, c√≥digos, regi√µes, categorias).\n\nSempre d√™ prioridade a filtros baseados em tabelas do tipo est√°tica (coluna tipo em consulta_tabelas).\n\n**Verifica√ß√£o em `documents` antes de gerar SQL**\n\n- Antes de gerar qualquer query, consulte sempre a tabela vetorial `documents`.  \n- Verifique se j√° existe uma vari√°vel/tag mapeada que contenha a informa√ß√£o solicitada (por exemplo: quantidade de usinas, pot√™ncia instalada, m√©dia de gera√ß√£o etc.).  \n- Caso a informa√ß√£o j√° exista em `documents`, utilize-a diretamente e apresente a resposta ao usu√°rio em linguagem natural, sem criar query SQL.  \n- **Nunca utilize fun√ß√µes de agrega√ß√£o como COUNT, SUM, AVG, DISTINCT ou similares se a informa√ß√£o j√° estiver dispon√≠vel em `documents`.**\n- Somente se a informa√ß√£o **n√£o estiver em `documents`**, passe para a etapa de gera√ß√£o de SQL.\n\nGera√ß√£o de SQL\n\n- Somente se a informa√ß√£o n√£o estiver dispon√≠vel em `documents`, gere queries SQL claras e corretas, compat√≠veis com PostgreSQL.  \n- Caso necess√°rio, utilize JOINs entre tabelas.  \n- Sempre inclua os filtros relevantes identificados anteriormente.  \n- Importante: fun√ß√µes como COUNT, SUM, AVG, DISTINCT s√≥ podem ser usadas se n√£o existir tag correspondente em `documents`.\n\n-Inclua filtros relevantes identificados no passo 3.\n\n**Pontos de aten√ß√£o na gera√ß√£o de SQL**\n\n- Pontos de aten√ß√£o na busca de valores textuais entre tabelas:\n\n1. Antes de aplicar qualquer filtro, **inspecione exemplos reais da tabela** para entender a formata√ß√£o:\n   - Pegue alguns valores da coluna que ser√° usada como filtro (ex.: `nome_usina`) e observe mai√∫sculas, min√∫sculas e acentua√ß√£o.\n   - Identifique padr√µes de prefixos (ex.: \"EOL\", \"UFV\") ou sufixos que possam existir.\n\n2. Sempre que poss√≠vel, **use dados existentes na tabela** (`documents` ou exemplos) para guiar a forma da query, ao inv√©s de assumir que `valor_do_usuario` est√° na mesma formata√ß√£o que no banco.\n\n3. Exemplo pr√°tico de avalia√ß√£o de formato:\n   - Usu√°rio fornece: \"Ja√≠ba\"\n   - Inspecionar valores reais na coluna `nome_usina`: [\"JAIBA\", \"JA√çBA\", \"ja√≠ba\", \"EOL S√£o Miguel\"]\n   - Escolher o valor que exista na tabela antes de construir qualquer filtro ou query.\n\n- Para campos de chave exata, como `ceg`, fa√ßa correspond√™ncia direta usando `=`.  \n- Se a consulta n√£o retornar nenhum resultado, **n√£o tente adivinhar ou gerar varia√ß√µes**.  \n- Em vez disso, responda ao usu√°rio perguntando se ele digitou a formata√ß√£o correta.  \n  - Exemplo de mensagem:  \n    \"N√£o encontrei nenhum registro para o CEG fornecido. Por favor, verifique se o valor est√° na formata√ß√£o correta, por exemplo: EOL.CV.RN.000000-0.00\"\n- Nunca tente normalizar ou usar fuzzy match para chaves exatas.\n\nRestri√ß√µes e respostas\n\nS√≥ utilize dados encontrados no banco.\n\nSe alguma informa√ß√£o n√£o estiver dispon√≠vel, responda:\n\n\"Desculpe, n√£o possuo essa informa√ß√£o no banco de dados atual.\"\n\nApresenta√ß√£o da resposta\n\nSempre apresente:\n\nExplica√ß√£o em linguagem natural (resposta para o usu√°rio).\n\nRe√∫na e entregue todas as informa√ß√µes dispon√≠veis relacionadas √† pergunta.\n\nImportante: nunca invente colunas, tabelas ou dados que n√£o existam em `consulta_tabelas` ou `documents`.\nImportante: Antes fazer qualquer query com soma, m√©dia ou count, procure na tabela `documents` se j√° possui essa tag com a informa√ß√£o."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -1824,
        544
      ],
      "id": "07eab38b-b89d-4518-a1cd-3057443b9d48",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {
          "temperature": 0.2
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1968,
        768
      ],
      "id": "b9f7b411-30ac-4149-92a0-089fa0c4be9a",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "ZrHE62UHTiQL1Hfc",
          "name": "API_DatathONS"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -1808,
        768
      ],
      "id": "905e9a41-8daa-4b6e-9980-ef29abea9259",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "jo10MrnSzopIO5e8",
          "name": "Postgres_DatathONS"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "=Use isto para ter as informa√ß√µes de qual dataset √© mais indicado para responder √† pergunta do usu√°rio.",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        -1680,
        816
      ],
      "id": "cb014c86-7ccb-4e92-a107-d7bde51360ac",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "bPvMht8Ew9XYvBiw",
          "name": "Supabase_DatathONS"
        }
      }
    },
    {
      "parameters": {
        "content": "### üìö Carregando Dicion√°rios no Supabase",
        "height": 640,
        "width": 768,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2384,
        1584
      ],
      "typeVersion": 1,
      "id": "c63a4202-2373-45dd-a0e3-3e62a22ca698",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "formTitle": "Upload Dicion√°rio ONS",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Upload o(s) documento(s)",
              "fieldType": "file",
              "acceptFileTypes": ".pdf, .csv",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -2288,
        1648
      ],
      "id": "e35fc64b-ec0a-4b8d-8ac1-9992e4ec2d74",
      "name": "On form submission",
      "webhookId": "9b2c716e-d9d9-4d61-8525-e439d0f11849"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        -2080,
        1648
      ],
      "id": "a870f163-c7a8-4580-8e9c-3ab82cef5a2a",
      "name": "Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "bPvMht8Ew9XYvBiw",
          "name": "Supabase_DatathONS"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -2176,
        1888
      ],
      "id": "f973ad1f-74e1-4f0a-961f-b31fc6b6358b",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "ZrHE62UHTiQL1Hfc",
          "name": "API_DatathONS"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "textSplittingMode": "custom",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        -2000,
        1840
      ],
      "id": "4969a579-767a-4110-bb73-938524a95f80",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "options": {
          "stripNewLines": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1648,
        992
      ],
      "id": "8921ecdf-ec1c-491b-bde4-928749790945",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "ZrHE62UHTiQL1Hfc",
          "name": "API_DatathONS"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "{{ $fromAI('sql_query') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        -1392,
        784
      ],
      "id": "3eef6dc4-2458-4b09-b759-6beab9293d1e",
      "name": "Execute a SQL query in Postgres",
      "credentials": {
        "postgres": {
          "id": "jo10MrnSzopIO5e8",
          "name": "Postgres_DatathONS"
        }
      }
    },
    {
      "parameters": {
        "chunkSize": 2000,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -1888,
        2032
      ],
      "id": "7d9b5ec2-3523-4db7-9593-ed1c59166680",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -2048,
        560
      ],
      "id": "1a56d21a-dcc8-4ec0-adbe-dff89c04f4e5",
      "name": "When chat message received",
      "webhookId": "e109c08d-de1d-420e-81d7-ccfe38734005"
    },
    {
      "parameters": {
        "description": "Chame essa fun√ß√£o para extrair tabelas e campos de tabelas escolhidas.",
        "workflowId": {
          "__rl": true,
          "value": "atJu7pVGJ0rMNNU7",
          "mode": "list",
          "cachedResultUrl": "/workflow/atJu7pVGJ0rMNNU7",
          "cachedResultName": "SubWorkflow_SelecionarTabela"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -1808,
        1008
      ],
      "id": "b6b06e53-8edf-4ed7-9b43-814b9ae61406",
      "name": "Selecionar dataset"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Execute a SQL query in Postgres": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Selecionar dataset": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1e8a53f9-0a31-4fee-8739-bb501c4c594f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c41a1a3c9ef6078f92aeb4d274a5d7dc119b59dc60953e96a1bf97279426206e"
  },
  "id": "KjVMuMahrOziYshg",
  "tags": []
}